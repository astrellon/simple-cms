[
    {
        "type": "post",
        "pageId": "projects",
        "contents": [
            {
                "text": [
                    "[h3](Simple Virtual DOM)",
                    "I made my own version of React",
                    "Mostly for learning but it's also what this website is powered by."
                ]
            },
            {
                "links": [{
                    "url": "https://www.npmjs.com/package/simple-tsx-vdom",
                    "icon": "npm"
                }, {
                    "url": "http://github.com/astrellon/simple-tsx-vdom",
                    "icon": "github"
                }]
            }
        ]
    },
    {
        "type": "post",
        "pageId": "projects",
        "contents": [
            {
                "text": [
                    "[h3](Simple Data Store)",
                    "I made my own version of Redux",
                    "Because I found Redux required too much boilerplate and needed more structure."
                ]
            },
            {
                "links": [{
                    "url": "https://www.npmjs.com/package/simple-data-store",
                    "icon": "npm"
                }, {
                    "url": "http://github.com/astrellon/simple-data-store",
                    "icon": "github"
                }]
            }
        ]
    },
    {
        "type": "post",
        "pageId": "projects",
        "contents": [
            {
                "text": [
                    "[h3](LOSS: Lua Operating SyStem)",
                    "A project to create an operating system that's built around using Lua with the intention of being light weight.",
                    "The main use case was for a game where you may want many simple in-game operating systems that look like a *NIX shell but without actually running a VM.",
                    "Main features:",
                    "* A modified version of the Lua VM that supports running multiple Lua States in the same thread using Boost Coroutines",
                    "* A virtual file system the supports mounting different types of file systems.",
                    "* A [link](tmpfs | https://en.wikipedia.org/wiki/Tmpfs) for virtual files (such as /dev and /proc)",
                    "* A persistent file system for long term storage.",
                    "* A [link](Fuse | https://en.wikipedia.org/wiki/Filesystem_in_Userspace) implementation that allows for mounting the persistent hard drives and modifying them outside of the VM."
                ],
                "links": [{
                    "url": "https://github.com/astrellon/loss",
                    "icon": "github"
                }],
                "pictures": [{
                    "url": "/assets/loss.png",
                    "caption": "An example of starting the VM with an init.d file that just prints some text.",
                    "fullSizeUrl": "/assets/loss.png"
                }],
                "picturePosition": "left"
            }
        ]
    },
    {
        "type": "post",
        "pageId": "projects",
        "contents": [
            {
                "text": [
                    "[h3](LOSS v0)",
                    "An earlier attempt at creating an OS for use in a game, specifically for a space game. This was a relatively naive approach that used NLua which is a C# implementation of Lua for use in Unity.",
                    "Main features:",
                    "* Basic shell for running Lua.",
                    "* A simple [link](VT100 | https://en.wikipedia.org/wiki/VT100) terminal emulator that used built in Unity components for text rendering.",
                    "* A very simple file system, however it did not support mounting."
                ],
                "links": [{
                    "url": "https://github.com/astrellon/ScalingOctoDubstep",
                    "icon": "github"
                }],
                "pictures": [{
                    "url": "/assets/scalingOctoDubstep_small.jpg",
                    "caption": "A screenshot of the UI in Unity."
                }],
                "picturePosition": "right"
            }
        ]
    },
    {
        "type": "post",
        "pageId": "projects",
        "contents": [
            {
                "text": [
                    "[h3](Unity Voxel Engine)",
                    "A [strong](small) voxel engine aim at being able to create and edit levels entirely within Unity. It performed well enough for the scale of the levels I wanted to created, however getting the editor tools to behave the way I wanted proved to be the most tricky aspect",
                    "Original intended to be in the style of [link](Might and Magic | https://en.wikipedia.org/wiki/Might_and_Magic) series which is why the original repository is called 'mm'",
                    "Main features:",
                    "* Chunked editing and loading. Maps are stored as individual binary files which is optimised for updating chunks during editing.",
                    "* Multiple different shapes beyond a cube such as ramps and different corners to allow for smoother terrain.",
                    "* Unity editing support for creating levels without needing additional tools."
                ],
                "links": [{
                    "url": "https://github.com/astrellon/mm",
                    "icon": "github"
                }],
                "pictures": [{
                    "url": "/assets/mmVoxels_small.png",
                    "caption": "A screenshot of the Voxel Engine UI in Unity.",
                    "fullSizeUrl": "/assets/mmVoxels.png"
                }],
                "picturePosition": "left"
            }
        ]
    },
    {
        "type": "post",
        "pageId": "projects",
        "contents": [
            {
                "text": [
                    "[h3](RPG Game)",
                    "A topdown 2D RPG game engine written in C++ built using minimal dependencies for the purpose of learning.",
                    "This is a fairly old project now, but it does represent a lot of learning in terms of C++, integrating a scripting language, handling modding, dealing with complex UI and handling an audio system.",
                    "Main features:",
                    "* Tile based 2D graphics with a tile overlapping system for blending between tiles.",
                    "* Sound system that supports streaming OGG and WAV files.",
                    "* Lua Bindings for controlling just about every aspect of the game. From how a new game is created and loaded to how a door should behave when interacted with.",
                    "* Maps are created through Lua and has a mechanism for determining if the map is being played new or loaded from disk, allowing for map scripts to upgrade old save files.",
                    "* A dialogue system based on The Elder Scrolls: Morrowind with topics, keywords and actions bound to those keywords.",
                    "* HTML documentation taken from the C++ comments using a Python script.",
                    "* In game text uses a simplistic CSS and HTML system for rich text.",
                    "* An in game map editor for creating new levels."
                ],
                "links": [{
                    "url": "https://github.com/astrellon/rouge",
                    "icon": "github"
                }],
                "pictures": [{
                    "url": "/assets/rouge.png",
                    "caption": "A screenshot of the RPG game",
                    "fullSizeUrl": "/assets/rouge.png"
                },
                {
                    "url": "/assets/rougeMapEditor.png",
                    "caption": "A screenshot of the in game map editor",
                    "fullSizeUrl": "/assets/rougeMapEditor.png"
                }],
                "picturePosition": "right"
            }
        ]
    }
]